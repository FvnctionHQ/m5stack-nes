# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "ILI9341" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

# Convert "Home Directory" that may contain unescaped backslashes on Windows


SET(CMAKE_C_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-xtensa32@2.50200.97/bin/xtensa-esp32-elf-gcc")
SET(CMAKE_CXX_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-xtensa32@2.50200.97/bin/xtensa-esp32-elf-g++")
SET(CMAKE_CXX_FLAGS "-fno-rtti -fno-exceptions -std=gnu++11 -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")
SET(CMAKE_C_FLAGS "-std=gnu99 -Wno-old-style-declaration -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")

SET(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "ILI9341")
    add_definitions(-DPLATFORMIO=60001)
    add_definitions(-DARDUINO_M5Stack_Core_ESP32)
    add_definitions(-DTFT_BRIGHTNESS=255)
    add_definitions(-DTFT_MISO=19)
    add_definitions(-DTFT_MOSI=23)
    add_definitions(-DTFT_SCLK=18)
    add_definitions(-DTFT_DC=27)
    add_definitions(-DTFT_CS=14)
    add_definitions(-DTFT_BL=32)
    add_definitions(-DHW_AUDIO_SAMPLERATE=22050)
    add_definitions(-DHW_CONTROLLER_GPIO_UP=4)
    add_definitions(-DHW_CONTROLLER_GPIO_DOWN=6)
    add_definitions(-DHW_CONTROLLER_GPIO_LEFT=7)
    add_definitions(-DHW_CONTROLLER_GPIO_RIGHT=5)
    add_definitions(-DHW_CONTROLLER_GPIO_SELECT=0)
    add_definitions(-DHW_CONTROLLER_GPIO_START=3)
    add_definitions(-DHW_CONTROLLER_GPIO_A=13)
    add_definitions(-DHW_CONTROLLER_GPIO_B=14)
    add_definitions(-DHW_CONTROLLER_GPIO_X=0)
    add_definitions(-DHW_CONTROLLER_GPIO_Y=0)
    add_definitions(-DBOARD_HAS_PSRAM)
    add_definitions(-DMONITOR_ROTATION=0)
    add_definitions(-DMONITOR_HOR_RES=320)
    add_definitions(-DMONITOR_VER_RES=240)
    add_definitions(-DILI9341_DRIVER=1)
    add_definitions(-DTFT_RST=33)
    add_definitions(-DESP32)
    add_definitions(-DESP_PLATFORM)
    add_definitions(-DF_CPU=240000000L)
    add_definitions(-DHAVE_CONFIG_H)
    add_definitions(-DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\")
    add_definitions(-DARDUINO=10805)
    add_definitions(-DARDUINO_ARCH_ESP32)
    add_definitions(-DARDUINO_VARIANT=\"m5stack_core_esp32\")
    add_definitions(-DARDUINO_BOARD=\"M5Stack\ Core\ ESP32\")

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/ext_libs/arduino-nofrendo/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/ext_libs/GFX Library for Arduino/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ILI9341/M5Stack_TreeView/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ILI9341/M5Stack_OnScreenKeyboard/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ILI9341/M5Stack/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/SPIFFS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/FS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/config")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/app_trace")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/app_update")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/asio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/bootloader_support")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/bt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/coap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/console")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/efuse")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp-tls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp_adc_cal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp_event")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp_http_client")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp_http_server")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp_https_ota")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp_https_server")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp_ringbuf")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp_websocket_client")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/espcoredump")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/ethernet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/expat")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/fatfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/freemodbus")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/freertos")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/heap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/idf_test")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/jsmn")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/json")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/libsodium")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/log")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/lwip")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/mbedtls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/mdns")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/micro-ecc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/mqtt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/newlib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/nghttp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/nvs_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/openssl")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/protobuf-c")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/protocomm")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/pthread")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/sdmmc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/smartconfig_ack")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/soc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/spi_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/spiffs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/tcp_transport")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/tcpip_adapter")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/ulp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/unity")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/vfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/wear_levelling")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/wifi_provisioning")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/wpa_supplicant")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/xtensa-debug-module")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp-face")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/esp32-camera")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/tools/sdk/include/fb_gfx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/cores/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/variants/m5stack_core_esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/HTTPClient/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/SD/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/WiFi/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/WiFiClientSecure/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/ArduinoOTA/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/AsyncUDP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/AzureIoT/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/BLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/BluetoothSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/DNSServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/ESP32/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/ESPmDNS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/FFat/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/HTTPUpdate/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/HTTPUpdateServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/NetBIOS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/Preferences/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/SD_MMC/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/SimpleBLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/Ticker/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/Update/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/WebServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32@3.10006.210326/libraries/WiFiProv/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32@2.50200.97/xtensa-esp32-elf/include/c++/5.2.0")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32@2.50200.97/xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32@2.50200.97/lib/gcc/xtensa-esp32-elf/5.2.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32@2.50200.97/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32@2.50200.97/xtensa-esp32-elf/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ILI9341/*.*
        ${CMAKE_CURRENT_LIST_DIR}/ext_libs/*.*
    )
endif()


FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
    ${CMAKE_CURRENT_LIST_DIR}/test/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
